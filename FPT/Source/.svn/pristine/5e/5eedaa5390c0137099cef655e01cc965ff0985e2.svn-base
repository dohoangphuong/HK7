@model CSS.Models.FundingMethod
@{
    ViewBag.Title = "Edit Funding Method";
}

<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#divModal");
    });
</script>

@using (Html.BeginForm("AddFundingMethod", "Maintain", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit funding method</h4>
            </div>
            <div class="modal-body">
                @Html.HiddenFor(m => m.FundingMethodId)
                <ul class="no-bullet">
                    <li>
                        @Html.LabelFor(m => m.FundingMethodName, new { @class = "width40" })
                        @Html.EditorFor(m => m.FundingMethodName)
                        @Html.ValidationMessageFor(m => m.FundingMethodName)
                    </li>
                    <li>
                        @Html.LabelFor(m => m.FundingType, new { @class = "width40" })
                        @Html.DropDownListFor(m => m.FundingType, new SelectList(ViewBag.FundingType, "XCONFIGVALUE", "XCONFIGVALUE"))
                    </li>
                    <li>
                        @Html.LabelFor(m => m.BudgetCode, new { @class = "width40" })
                        @Html.EditorFor(m => m.BudgetCode)
                    </li>
                    <li>
                        @Html.LabelFor(m => m.CostCentre, new { @class = "width40" })
                        @Html.EditorFor(m => m.CostCentre)
                    </li>
                    <li>
                        @Html.LabelFor(m => m.ContractTemplateLocation, new { @class = "width40" })
                        <input type="file" name="file" style="display:inline"/>
                    </li>
                    <li>
                        @Html.LabelFor(m => m.SignedContractDefault, new { @class = "width40" })
                        @Html.DropDownListFor(m => m.SignedContractDefault, new SelectList(ViewBag.SignedContractDefault, "XCONFIGVALUE", "XCONFIGVALUE"))
                    </li>
                    <li>
                        @Html.LabelFor(m => m.Status, new { @class = "width40" })
                        @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.FundingStatus, "XCONFIGVALUE", "XCONFIGVALUE"))
                    </li>
                </ul>
            </div>

            <div class="modal-footer">
                <button type="submit" class="btn btn-default">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryvalidate")
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
}

