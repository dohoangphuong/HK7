@model CSS.ViewModels.MiscTextModel

@{
    Layout = null;
}

<script type="text/javascript">
    function saveSuccess() {
        alert("Save success");
    }
    function saveFailed() {
        alert("Save failed");
    }
</script>

@using (Ajax.BeginForm("SaveMiscText", "Agreement", null
    , new AjaxOptions()
    {
        HttpMethod = "POST",
        OnSuccess = "saveSuccess",
        OnFailure = "saveFailed",
        UpdateTargetId= "step-7"
    }, new { @style="height:100%" }))
{ 
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="height:90%">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AgreementNumber)
        @Html.HiddenFor(model => model.VarriantNumber)

        <div class="form-group" style="margin:5px">
            @Html.LabelFor(model => model.CreditNoteText, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextAreaFor(model => model.CreditNoteText, 5, 80, new { htmlAttributes = new { @class = "col-md-8" } })
            @Html.ValidationMessageFor(model => model.CreditNoteText, "", new { @class = "text-danger" })
        </div>
        <div class="form-group" style="margin:5px">
            @Html.LabelFor(model => model.CommentText, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextAreaFor(model => model.CommentText, 5, 80, new { htmlAttributes = new { @class = "col-md-8" } })
            @Html.ValidationMessageFor(model => model.CommentText, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="actionBar" style="height: 10%">
        <input class="buttonNext" type="button" value="next" onclick="forward()" />
        <input class="buttonPrevious" type="button" value="back" onclick="backward()" />
        <input class="buttonFinish" type="submit" value="save as draft" />
    </div>
}