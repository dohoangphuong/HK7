using CSS.ViewModels;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CSS.Models;

namespace CSS.Controllers
{
    public class DealerController : Controller
    {
        private CSSEntities1 db = new CSSEntities1();

        //get all dealer
        [HttpPost]
        public ActionResult GetAllDealer()
        {
            var dealers = from rfo in db.RFOUsers
                          from addr in db.ContactAddresses
                              .Where(ad => ad.UserId == rfo.UserId).Take(1)
                          select (new DealerSelectionModel()
                          {
                              Code = rfo.UserId,
                              DealerName = rfo.FirstName + " " + rfo.LastName,
                              Town = addr.Town,
                              County = addr.County
                          });

            if (dealers == null)
            {
                ViewBag.errorMessage = "Can not get dealer data";
                return PartialView("~/View/Agreement/Warning.cshtml");
            }
            else
            {
                var searchResults = dealers.ToArray<DealerSelectionModel>();
                if (searchResults.Length > 0)
                    return PartialView("SearchDealerResults", searchResults);
                else
                {
                    ViewBag.errorMessage = "Dealer Not Found";
                    return PartialView("~/View/Agreement/Warning.cshtml");
                }
            }
        }

        //function Search Dealer
        [ValidateAntiForgeryToken]
        [HttpPost]
        public ActionResult SearchDealer()
        {
            SearchDealerModel searchModel = new SearchDealerModel();
            if (TryUpdateModel(searchModel))
            {
                var dealers = from rfo in db.RFOUsers.Where(r =>
                        (
                            (searchModel.Code == null || r.UserId == searchModel.Code)
                            && (string.IsNullOrEmpty(searchModel.DealerName)
                                || (r.FirstName + r.LastName).Contains(searchModel.DealerName))
                        ))
                              from addr in db.ContactAddresses.Where(ad => ad.UserId == rfo.UserId).Take(1)
                              select new DealerSelectionModel()
                              {
                                  Code = rfo.UserId,
                                  DealerName = rfo.FirstName + " " + rfo.LastName,
                                  Town = addr.Town,
                                  County = addr.County
                              };
                if (dealers == null)
                {
                    ViewBag.errorMessage = "Can not get dealer data";
                    return PartialView("~/View/Agreement/Warning.cshtml");
                }
                else
                {
                    var searchResults = dealers.ToArray<DealerSelectionModel>();
                    if (searchResults.Length > 0)
                        return PartialView("SearchDealerResults", searchResults);
                    else
                    {
                        ViewBag.errorMessage = "Dealer Not Found";
                        return PartialView("~/View/Agreement/Warning.cshtml");
                    }
                }
            }
            else
            {
                ViewBag.errorMessage = "Can not receive search input.";
                return PartialView("~/View/Agreement/Warning.cshtml");
            }
        }

        //save dealers to agreement
        [HttpPost]
        public ActionResult SaveDealers(int[] selectedDealers,
            int agreementNumber = 0, int varriantNumber = 0)
        {
            if (selectedDealers == null)
            {
                ViewBag.errorMessage = "Can not receive input.";
                return PartialView("~/View/Agreement/Warning.cshtml");
            }
            else
            {
                var agrmt = db.Agreements.Find(agreementNumber, varriantNumber);
                if (agrmt == null)
                {
                    ViewBag.errorMessage = "Agreement not found.";
                    return PartialView("~/View/Agreement/Warning.cshtml");
                }
                else
                {
                    try
                    {
                        //assign dealer to agreement
                        foreach (var dealerId in selectedDealers)
                            agrmt.RFOUsers.Add(db.RFOUsers.Find(dealerId));

                        //add empty volume to agreemetn
                        Volume vol = new Volume();
                        vol.Agreements.Add(agrmt);

                        db.Entry(agrmt).State = System.Data.Entity.EntityState.Modified;
                        db.Volumes.Add(vol);
                        db.SaveChanges();
                    }
                    catch (Exception ex)
                    {
                        ViewBag.errorMessage = "Assign dealers to agreement failed. " + ex.Message;
                        return PartialView("~/View/Agreement/Warning.cshtml");
                    }

                    return PartialView("~/Views/Shared/Alert.cshtml");
                }
            }
        }

    }
}
