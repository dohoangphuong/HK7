@model WebsiteQuanLyBanHang.Models.SalesOrder

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Sales Order</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.OrderNo, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderNo, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.OrderNo, "", new {@class = "text-danger"})
                    @Html.ValidationMessage("OrderNoError")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderDate, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderDate, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.OrderDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceType, "InvoiceType", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("InvoiceType", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.InvoiceType, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("UserID", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.UserID, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserIDRec, "UserIDRec", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("UserIDRec", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.UserIDRec, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustID, "CustID", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("CustID", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.CustID, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OverdueDate, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OverdueDate, new {htmlAttributes = new {@class = "form-control" }})
                    @Html.ValidationMessageFor(model => model.OverdueDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderDisc, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderDisc, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.OrderDisc, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaxAmt, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TaxAmt,  new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.TaxAmt, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalAmt, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalAmt, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.TotalAmt, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payment, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payment, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Payment, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Debt, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Debt, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Debt, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Save" />
    </div>
}

