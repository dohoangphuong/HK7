@model CSS.Models.Banding

@{
    Layout = null;
}

@Scripts.Render("~/bundles/jqueryvalidate")

<script type="text/javascript">
    function checkMinMax() {
        var min = $("#Min").val();
        var max = $("#Max").val();
        if (max - min < 10) {
            alert("Banding value to must be 10 greater than Banding value from.");
            return false;
        }
        else if (max - min > 100) {
            alert("Banding value to is only 100 greater than Banding value from.");
            return false;
        }
        else
            return true;
    }
</script>

@using (Ajax.BeginForm("AddBanding", "Volume"
    , new AjaxOptions()
    {
        HttpMethod = "POST",
        UpdateTargetId = "listBanding",
        OnSuccess = "closeModel()"
    }))
{
    @Html.AntiForgeryToken()
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                Add Banding Value
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.VolumeId)
                    @Html.HiddenFor(model => model.Min)

                    <div class="form-group">
                        @Html.Label("Banding Value From", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Min, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Banding Value To", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Max, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Max, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" onclick="javascript: return checkMinMax();" class="btn btn-default">Add</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
}